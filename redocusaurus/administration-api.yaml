openapi: 3.1.0
info:
  title: StuStaPay Administration API
  license:
    name: AGPL-3.0
  version: 0.0.1
paths:
  /products:
    get:
      tags:
        - products
      summary: List Products
      operationId: list_products
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedList_Product_int_'
        '404':
          description: Not found
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - products
      summary: Create Product
      operationId: create_product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProduct'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /products/{product_id}:
    get:
      tags:
        - products
      summary: Get Product
      operationId: get_product
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
            title: Product Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - products
      summary: Update Product
      operationId: update_product
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
            title: Product Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProduct'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - products
      summary: Delete Product
      operationId: delete_product
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
            title: Product Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /users:
    get:
      tags:
        - users
      summary: List Users
      operationId: list_users
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedList_User_int_'
        '404':
          description: Not found
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - users
      summary: Create User
      operationId: create_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserPayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /users/{user_id}:
    get:
      tags:
        - users
      summary: Get User
      operationId: get_user
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - users
      summary: Update User
      operationId: update_user
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            title: User Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserPayload'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - users
      summary: Delete User
      operationId: delete_user
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /user-roles:
    get:
      tags:
        - user-roles
      summary: List User Roles
      operationId: list_user_roles
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedList_UserRole_int_'
        '404':
          description: Not found
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - user-roles
      summary: Create User Role
      operationId: create_user_role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserRole'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRole'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /user-roles/{user_role_id}:
    post:
      tags:
        - user-roles
      summary: Update User Role
      operationId: update_user_role
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: user_role_id
          in: path
          required: true
          schema:
            type: integer
            title: User Role Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRolePrivilegesPayload'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRole'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - user-roles
      summary: Delete User Role
      operationId: delete_user_role
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: user_role_id
          in: path
          required: true
          schema:
            type: integer
            title: User Role Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tax-rates:
    get:
      tags:
        - tax-rates
      summary: List Tax Rates
      operationId: list_tax_rates
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedList_TaxRate_str_'
        '404':
          description: Not found
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - tax-rates
      summary: Create Tax Rate
      operationId: create_tax_rate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRate'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /tax-rates/{tax_rate_name}:
    get:
      tags:
        - tax-rates
      summary: Get Tax Rate
      operationId: get_tax_rate
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: tax_rate_name
          in: path
          required: true
          schema:
            type: string
            title: Tax Rate Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRate'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - tax-rates
      summary: Update Tax Rate
      operationId: update_tax_rate
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: tax_rate_name
          in: path
          required: true
          schema:
            type: string
            title: Tax Rate Name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRateWithoutName'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRate'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - tax-rates
      summary: Delete Tax Rate
      operationId: delete_tax_rate
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: tax_rate_name
          in: path
          required: true
          schema:
            type: string
            title: Tax Rate Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/login:
    post:
      tags:
        - auth
      summary: login with username and password
      operationId: login
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_login_auth_login_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/change-password:
    post:
      tags:
        - auth
      summary: change password
      operationId: change_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordPayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /auth/logout:
    post:
      tags:
        - auth
      summary: sign out of the current session
      operationId: logout
      responses:
        '204':
          description: Successful Response
        '404':
          description: Not found
      security:
        - OAuth2PasswordBearer: []
  /tills:
    get:
      tags:
        - tills
      summary: List Tills
      operationId: list_tills
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedList_Till_int_'
        '404':
          description: Not found
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - tills
      summary: Create Till
      operationId: create_till
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTill'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Till'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /tills/{till_id}:
    get:
      tags:
        - tills
      summary: Get Till
      operationId: get_till
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: till_id
          in: path
          required: true
          schema:
            type: integer
            title: Till Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Till'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - tills
      summary: Update Till
      operationId: update_till
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: till_id
          in: path
          required: true
          schema:
            type: integer
            title: Till Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTill'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Till'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - tills
      summary: Delete Till
      operationId: delete_till
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: till_id
          in: path
          required: true
          schema:
            type: integer
            title: Till Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tills/{till_id}/logout:
    post:
      tags:
        - tills
      summary: Logout Till
      operationId: logout_till
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: till_id
          in: path
          required: true
          schema:
            type: integer
            title: Till Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tills/{till_id}/force-logout-user:
    post:
      tags:
        - tills
      summary: Force Logout User
      operationId: force_logout_user
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: till_id
          in: path
          required: true
          schema:
            type: integer
            title: Till Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /till-layouts:
    get:
      tags:
        - till-layouts
      summary: List Till Layouts
      operationId: list_till_layouts
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedList_TillLayout_int_'
        '404':
          description: Not found
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - till-layouts
      summary: Create Till Layout
      operationId: create_till_layout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTillLayout'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewTillLayout'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /till-layouts/{layout_id}:
    get:
      tags:
        - till-layouts
      summary: Get Till Layout
      operationId: get_till_layout
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: layout_id
          in: path
          required: true
          schema:
            type: integer
            title: Layout Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TillLayout'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - till-layouts
      summary: Update Till Layout
      operationId: update_till_layout
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: layout_id
          in: path
          required: true
          schema:
            type: integer
            title: Layout Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTillLayout'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TillLayout'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - till-layouts
      summary: Delete Till Layout
      operationId: delete_till_layout
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: layout_id
          in: path
          required: true
          schema:
            type: integer
            title: Layout Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /till-profiles:
    get:
      tags:
        - till-profiles
      summary: List Till Profiles
      operationId: list_till_profiles
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedList_TillProfile_int_'
        '404':
          description: Not found
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - till-profiles
      summary: Create Till Profile
      operationId: create_till_profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTillProfile'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewTillProfile'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /till-profiles/{profile_id}:
    get:
      tags:
        - till-profiles
      summary: Get Till Profile
      operationId: get_till_profile
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: profile_id
          in: path
          required: true
          schema:
            type: integer
            title: Profile Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TillProfile'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - till-profiles
      summary: Update Till Profile
      operationId: update_till_profile
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: profile_id
          in: path
          required: true
          schema:
            type: integer
            title: Profile Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTillProfile'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TillProfile'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - till-profiles
      summary: Delete Till Profile
      operationId: delete_till_profile
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: profile_id
          in: path
          required: true
          schema:
            type: integer
            title: Profile Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /till-buttons:
    get:
      tags:
        - till-buttons
      summary: List Till Buttons
      operationId: list_till_buttons
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedList_TillButton_int_'
        '404':
          description: Not found
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - till-buttons
      summary: Create Till Button
      operationId: create_till_button
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTillButton'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewTillButton'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /till-buttons/{button_id}:
    get:
      tags:
        - till-buttons
      summary: Get Till Button
      operationId: get_till_button
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: button_id
          in: path
          required: true
          schema:
            type: integer
            title: Button Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TillButton'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - till-buttons
      summary: Update Till Button
      operationId: update_till_button
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: button_id
          in: path
          required: true
          schema:
            type: integer
            title: Button Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTillButton'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TillButton'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - till-buttons
      summary: Delete Till Button
      operationId: delete_till_button
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: button_id
          in: path
          required: true
          schema:
            type: integer
            title: Button Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /till-register-stockings:
    get:
      tags:
        - till-register-stockings
      summary: List Register Stockings
      operationId: list_register_stockings
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedList_CashRegisterStocking_int_'
        '404':
          description: Not found
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - till-register-stockings
      summary: Create Register Stocking
      operationId: create_register_stocking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCashRegisterStocking'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashRegisterStocking'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /till-register-stockings/{stocking_id}:
    post:
      tags:
        - till-register-stockings
      summary: Update Register Stocking
      operationId: update_register_stocking
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: stocking_id
          in: path
          required: true
          schema:
            type: integer
            title: Stocking Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCashRegisterStocking'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashRegisterStocking'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - till-register-stockings
      summary: Delete Register Stocking
      operationId: delete_register_stocking
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: stocking_id
          in: path
          required: true
          schema:
            type: integer
            title: Stocking Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /till-registers:
    get:
      tags:
        - till-registers
      summary: List Cash Registers Admin
      operationId: list_cash_registers_admin
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedList_CashRegister_int_'
        '404':
          description: Not found
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - till-registers
      summary: Create Register
      operationId: create_register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCashRegister'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashRegister'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /till-registers/transfer-register:
    post:
      tags:
        - till-registers
      summary: Transfer Register
      operationId: transfer_register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRegisterPayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /till-registers/{register_id}:
    post:
      tags:
        - till-registers
      summary: Update Register
      operationId: update_register
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: register_id
          in: path
          required: true
          schema:
            type: integer
            title: Register Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCashRegister'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - till-registers
      summary: Delete Register
      operationId: delete_register
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: register_id
          in: path
          required: true
          schema:
            type: integer
            title: Register Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public-config:
    get:
      tags:
        - config
      summary: Get Public Config
      operationId: get_public_config
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
        '404':
          description: Not found
  /config:
    get:
      tags:
        - config
      summary: List Config Entries
      operationId: list_config_entries
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedList_ConfigEntry_str_'
        '404':
          description: Not found
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - config
      summary: Set Config Entry
      operationId: set_config_entry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigEntry'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigEntry'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /system-accounts:
    get:
      tags:
        - accounts
      summary: List System Accounts
      operationId: list_system_accounts
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedList_Account_int_'
        '404':
          description: Not found
      security:
        - OAuth2PasswordBearer: []
  /accounts/find-accounts:
    post:
      tags:
        - accounts
      summary: Find Accounts
      operationId: find_accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindAccountPayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedList_Account_int_'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /accounts/{account_id}:
    get:
      tags:
        - accounts
      summary: Get Account
      operationId: get_account
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /accounts/{account_id}/disable:
    post:
      tags:
        - accounts
      summary: Disable Account
      operationId: disable_account
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: integer
            title: Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /accounts/{account_id}/update-balance:
    post:
      tags:
        - accounts
      summary: Update Balance
      operationId: update_balance
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: integer
            title: Account Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBalancePayload'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /accounts/{account_id}/update-voucher-amount:
    post:
      tags:
        - accounts
      summary: Update Voucher Amount
      operationId: update_voucher_amount
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: integer
            title: Account Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVoucherAmountPayload'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /accounts/{account_id}/update-tag-uid:
    post:
      tags:
        - accounts
      summary: Update Tag Uid
      operationId: update_tag_uid
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: integer
            title: Account Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTagUidPayload'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /accounts/{account_id}/update-comment:
    post:
      tags:
        - accounts
      summary: Update Account Comment
      operationId: update_account_comment
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: integer
            title: Account Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountCommentPayload'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /user-tags/{user_tag_uid_hex}:
    get:
      tags:
        - accounts
      summary: Get User Tag Detail
      operationId: get_user_tag_detail
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: user_tag_uid_hex
          in: path
          required: true
          schema:
            type: string
            title: User Tag Uid Hex
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTagDetail'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /user-tags/{user_tag_uid_hex}/update-comment:
    post:
      tags:
        - accounts
      summary: Update User Tag Comment
      operationId: update_user_tag_comment
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: user_tag_uid_hex
          in: path
          required: true
          schema:
            type: string
            title: User Tag Uid Hex
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommentPayload'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTagDetail'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /orders/by-till/{till_id}:
    get:
      tags:
        - orders
      summary: List Orders By Till
      operationId: list_orders_by_till
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: till_id
          in: path
          required: true
          schema:
            type: integer
            title: Till Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedList_Order_int_'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /orders:
    get:
      tags:
        - orders
      summary: List Orders
      operationId: list_orders
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: customer_account_id
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            title: Customer Account Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedList_Order_int_'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /orders/{order_id}:
    get:
      tags:
        - orders
      summary: Get Order
      operationId: get_order
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            title: Order Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - orders
      summary: Cancel Order
      operationId: cancel_order
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            title: Order Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /orders/{order_id}/edit:
    post:
      tags:
        - orders
      summary: Edit Order
      operationId: edit_order
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            title: Order Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditSaleProducts'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletedSaleProducts'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /cashiers:
    get:
      tags:
        - cashiers
      summary: List Cashiers
      operationId: list_cashiers
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedList_Cashier_int_'
        '404':
          description: Not found
      security:
        - OAuth2PasswordBearer: []
  /cashiers/{cashier_id}:
    get:
      tags:
        - cashiers
      summary: Get Cashier
      operationId: get_cashier
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: cashier_id
          in: path
          required: true
          schema:
            type: integer
            title: Cashier Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cashier'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /cashiers/{cashier_id}/shifts:
    get:
      tags:
        - cashiers
      summary: Get Cashier Shifts
      operationId: get_cashier_shifts
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: cashier_id
          in: path
          required: true
          schema:
            type: integer
            title: Cashier Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedList_CashierShift_int_'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /cashiers/{cashier_id}/shift-stats:
    get:
      tags:
        - cashiers
      summary: Get Cashier Shift Stats
      operationId: get_cashier_shift_stats
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: cashier_id
          in: path
          required: true
          schema:
            type: integer
            title: Cashier Id
        - name: shift_id
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            title: Shift Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashierShiftStats'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /cashiers/{cashier_id}/close-out:
    post:
      tags:
        - cashiers
      summary: Close Out Cashier
      operationId: close_out_cashier
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: cashier_id
          in: path
          required: true
          schema:
            type: integer
            title: Cashier Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloseOut'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloseOutResult'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /stats/products:
    get:
      tags:
        - stats
      summary: Get Product Stats
      operationId: get_product_stats
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: to_timestamp
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            title: To Timestamp
        - name: from_timestamp
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            title: From Timestamp
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/stustapay__core__service__order__stats__ProductStats
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tickets:
    get:
      tags:
        - tickets
      summary: List Tickets
      operationId: list_tickets
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedList_Ticket_int_'
        '404':
          description: Not found
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - tickets
      summary: Create Ticket
      operationId: create_ticket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTicket'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /tickets/{ticket_id}:
    get:
      tags:
        - tickets
      summary: Get Ticket
      operationId: get_ticket
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: ticket_id
          in: path
          required: true
          schema:
            type: integer
            title: Ticket Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - tickets
      summary: Update Ticket
      operationId: update_ticket
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: ticket_id
          in: path
          required: true
          schema:
            type: integer
            title: Ticket Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTicket'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - tickets
      summary: Delete Ticket
      operationId: delete_ticket
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: ticket_id
          in: path
          required: true
          schema:
            type: integer
            title: Ticket Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    Account:
      properties:
        id:
          type: integer
          title: Id
        type:
          $ref: '#/components/schemas/AccountType'
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        comment:
          anyOf:
            - type: string
            - type: 'null'
          title: Comment
        balance:
          type: number
          title: Balance
        vouchers:
          type: integer
          title: Vouchers
        user_tag_uid:
          anyOf:
            - type: integer
            - type: 'null'
          title: User Tag Uid
        user_tag_comment:
          anyOf:
            - type: string
            - type: 'null'
          title: User Tag Comment
        restriction:
          anyOf:
            - $ref: '#/components/schemas/ProductRestriction'
            - type: 'null'
        tag_history:
          items:
            $ref: '#/components/schemas/UserTagHistoryEntry'
          type: array
          title: Tag History
        user_tag_uid_hex:
          type: string
          title: User Tag Uid Hex
      type: object
      required:
        - id
        - type
        - name
        - comment
        - balance
        - vouchers
        - user_tag_uid
        - restriction
        - tag_history
      title: Account
    AccountType:
      type: string
      enum:
        - virtual
        - internal
        - private
      title: AccountType
    Body_login_auth_login_post:
      properties:
        grant_type:
          anyOf:
            - type: string
              pattern: password
            - type: 'null'
          title: Grant Type
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        scope:
          type: string
          title: Scope
          default: ''
        client_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Client Id
        client_secret:
          anyOf:
            - type: string
            - type: 'null'
          title: Client Secret
      type: object
      required:
        - username
        - password
      title: Body_login_auth_login_post
    BookedProduct:
      properties:
        product_id:
          type: integer
          title: Product Id
        quantity:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quantity
        price:
          anyOf:
            - type: number
            - type: 'null'
          title: Price
      type: object
      required:
        - product_id
      title: BookedProduct
    CashRegister:
      properties:
        name:
          type: string
          title: Name
        id:
          type: integer
          title: Id
        current_cashier_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Current Cashier Id
        current_cashier_tag_uid:
          anyOf:
            - type: integer
            - type: 'null'
          title: Current Cashier Tag Uid
        current_till_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Current Till Id
        current_balance:
          type: number
          title: Current Balance
      type: object
      required:
        - name
        - id
        - current_cashier_id
        - current_cashier_tag_uid
        - current_till_id
        - current_balance
      title: CashRegister
    CashRegisterStocking:
      properties:
        name:
          type: string
          title: Name
        euro200:
          type: integer
          title: Euro200
          default: 0
        euro100:
          type: integer
          title: Euro100
          default: 0
        euro50:
          type: integer
          title: Euro50
          default: 0
        euro20:
          type: integer
          title: Euro20
          default: 0
        euro10:
          type: integer
          title: Euro10
          default: 0
        euro5:
          type: integer
          title: Euro5
          default: 0
        euro2:
          type: integer
          title: Euro2
          default: 0
        euro1:
          type: integer
          title: Euro1
          default: 0
        cent50:
          type: integer
          title: Cent50
          default: 0
        cent20:
          type: integer
          title: Cent20
          default: 0
        cent10:
          type: integer
          title: Cent10
          default: 0
        cent5:
          type: integer
          title: Cent5
          default: 0
        cent2:
          type: integer
          title: Cent2
          default: 0
        cent1:
          type: integer
          title: Cent1
          default: 0
        variable_in_euro:
          type: number
          title: Variable In Euro
          default: 0
        id:
          type: integer
          title: Id
        total:
          type: number
          title: Total
      type: object
      required:
        - name
        - id
        - total
      title: CashRegisterStocking
    Cashier:
      properties:
        id:
          type: integer
          title: Id
        login:
          type: string
          title: Login
        display_name:
          type: string
          title: Display Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        user_tag_uid:
          anyOf:
            - type: integer
            - type: 'null'
          title: User Tag Uid
        transport_account_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Transport Account Id
        cashier_account_id:
          type: integer
          title: Cashier Account Id
        cash_register_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Cash Register Id
        cash_drawer_balance:
          type: number
          title: Cash Drawer Balance
        till_ids:
          items:
            type: integer
          type: array
          title: Till Ids
        user_tag_uid_hex:
          type: string
          title: User Tag Uid Hex
      type: object
      required:
        - id
        - login
        - display_name
        - cashier_account_id
        - cash_drawer_balance
        - till_ids
      title: Cashier
    CashierShift:
      properties:
        id:
          type: integer
          title: Id
        comment:
          type: string
          title: Comment
        closing_out_user_id:
          type: integer
          title: Closing Out User Id
        actual_cash_drawer_balance:
          type: number
          title: Actual Cash Drawer Balance
        expected_cash_drawer_balance:
          type: number
          title: Expected Cash Drawer Balance
        cash_drawer_imbalance:
          type: number
          title: Cash Drawer Imbalance
        started_at:
          type: string
          format: date-time
          title: Started At
        ended_at:
          type: string
          format: date-time
          title: Ended At
      type: object
      required:
        - id
        - comment
        - closing_out_user_id
        - actual_cash_drawer_balance
        - expected_cash_drawer_balance
        - cash_drawer_imbalance
        - started_at
        - ended_at
      title: CashierShift
    CashierShiftStats:
      properties:
        booked_products:
          items:
            $ref: >-
              #/components/schemas/stustapay__core__schema__cashier__CashierShiftStats__ProductStats
          type: array
          title: Booked Products
      type: object
      required:
        - booked_products
      title: CashierShiftStats
    ChangePasswordPayload:
      properties:
        old_password:
          type: string
          title: Old Password
        new_password:
          type: string
          title: New Password
      type: object
      required:
        - old_password
        - new_password
      title: ChangePasswordPayload
    CloseOut:
      properties:
        comment:
          type: string
          title: Comment
        actual_cash_drawer_balance:
          type: number
          title: Actual Cash Drawer Balance
        closing_out_user_id:
          type: integer
          title: Closing Out User Id
      type: object
      required:
        - comment
        - actual_cash_drawer_balance
        - closing_out_user_id
      title: CloseOut
    CloseOutResult:
      properties:
        cashier_id:
          type: integer
          title: Cashier Id
        imbalance:
          type: number
          title: Imbalance
      type: object
      required:
        - cashier_id
        - imbalance
      title: CloseOutResult
    CompletedSaleProducts:
      properties:
        uuid:
          type: string
          format: uuid
          title: Uuid
        old_balance:
          type: number
          title: Old Balance
        new_balance:
          type: number
          title: New Balance
        old_voucher_balance:
          type: integer
          title: Old Voucher Balance
        new_voucher_balance:
          type: integer
          title: New Voucher Balance
        customer_account_id:
          type: integer
          title: Customer Account Id
        line_items:
          items:
            $ref: '#/components/schemas/PendingLineItem'
          type: array
          title: Line Items
        products:
          items:
            $ref: '#/components/schemas/BookedProduct'
          type: array
          title: Products
        id:
          type: integer
          title: Id
        booked_at:
          type: string
          format: date-time
          title: Booked At
        cashier_id:
          type: integer
          title: Cashier Id
        till_id:
          type: integer
          title: Till Id
      type: object
      required:
        - uuid
        - old_balance
        - new_balance
        - old_voucher_balance
        - new_voucher_balance
        - customer_account_id
        - line_items
        - products
        - id
        - booked_at
        - cashier_id
        - till_id
      title: CompletedSaleProducts
    Config:
      properties:
        test_mode:
          type: boolean
          title: Test Mode
        test_mode_message:
          type: string
          title: Test Mode Message
        sumup_topup_enabled:
          type: boolean
          title: Sumup Topup Enabled
        currency_symbol:
          type: string
          title: Currency Symbol
        currency_identifier:
          type: string
          title: Currency Identifier
        contact_email:
          type: string
          title: Contact Email
        terminal_api_endpoint:
          type: string
          title: Terminal Api Endpoint
      type: object
      required:
        - test_mode
        - test_mode_message
        - sumup_topup_enabled
        - currency_symbol
        - currency_identifier
        - contact_email
        - terminal_api_endpoint
      title: Config
    ConfigEntry:
      properties:
        key:
          type: string
          title: Key
        value:
          anyOf:
            - type: string
            - type: 'null'
          title: Value
      type: object
      required:
        - key
        - value
      title: ConfigEntry
    CreateUserPayload:
      properties:
        login:
          type: string
          title: Login
        display_name:
          type: string
          title: Display Name
        role_names:
          items:
            type: string
          type: array
          title: Role Names
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        user_tag_uid_hex:
          anyOf:
            - type: string
            - type: 'null'
          title: User Tag Uid Hex
        transport_account_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Transport Account Id
        cashier_account_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Cashier Account Id
        password:
          anyOf:
            - type: string
            - type: 'null'
          title: Password
      type: object
      required:
        - login
        - display_name
        - role_names
      title: CreateUserPayload
    CurrentUser:
      properties:
        id:
          type: integer
          title: Id
        login:
          type: string
          title: Login
        display_name:
          type: string
          title: Display Name
        active_role_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Active Role Id
        active_role_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Active Role Name
        privileges:
          items:
            $ref: '#/components/schemas/Privilege'
          type: array
          title: Privileges
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        user_tag_uid:
          anyOf:
            - type: integer
            - type: 'null'
          title: User Tag Uid
        transport_account_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Transport Account Id
        cashier_account_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Cashier Account Id
        cash_register_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Cash Register Id
        user_tag_uid_hex:
          type: string
          title: User Tag Uid Hex
      type: object
      required:
        - id
        - login
        - display_name
        - privileges
      title: CurrentUser
      description: |2-

            Describes a logged-in user in the system
            
    EditSaleProducts:
      properties:
        uuid:
          type: string
          format: uuid
          title: Uuid
        used_vouchers:
          anyOf:
            - type: integer
            - type: 'null'
          title: Used Vouchers
        products:
          items:
            $ref: '#/components/schemas/BookedProduct'
          type: array
          title: Products
      type: object
      required:
        - uuid
        - products
      title: EditSaleProducts
    FindAccountPayload:
      properties:
        search_term:
          type: string
          title: Search Term
      type: object
      required:
        - search_term
      title: FindAccountPayload
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    LineItem:
      properties:
        quantity:
          type: integer
          title: Quantity
        product:
          $ref: '#/components/schemas/Product'
        product_price:
          type: number
          title: Product Price
        tax_name:
          type: string
          title: Tax Name
        tax_rate:
          type: number
          title: Tax Rate
        item_id:
          type: integer
          title: Item Id
        total_tax:
          type: number
          title: Total Tax
      type: object
      required:
        - quantity
        - product
        - product_price
        - tax_name
        - tax_rate
        - item_id
        - total_tax
      title: LineItem
    LoginResponse:
      properties:
        user:
          $ref: '#/components/schemas/CurrentUser'
        access_token:
          type: string
          title: Access Token
        grant_type:
          type: string
          title: Grant Type
          default: bearer
      type: object
      required:
        - user
        - access_token
      title: LoginResponse
    NewCashRegister:
      properties:
        name:
          type: string
          title: Name
      type: object
      required:
        - name
      title: NewCashRegister
    NewCashRegisterStocking:
      properties:
        name:
          type: string
          title: Name
        euro200:
          type: integer
          title: Euro200
          default: 0
        euro100:
          type: integer
          title: Euro100
          default: 0
        euro50:
          type: integer
          title: Euro50
          default: 0
        euro20:
          type: integer
          title: Euro20
          default: 0
        euro10:
          type: integer
          title: Euro10
          default: 0
        euro5:
          type: integer
          title: Euro5
          default: 0
        euro2:
          type: integer
          title: Euro2
          default: 0
        euro1:
          type: integer
          title: Euro1
          default: 0
        cent50:
          type: integer
          title: Cent50
          default: 0
        cent20:
          type: integer
          title: Cent20
          default: 0
        cent10:
          type: integer
          title: Cent10
          default: 0
        cent5:
          type: integer
          title: Cent5
          default: 0
        cent2:
          type: integer
          title: Cent2
          default: 0
        cent1:
          type: integer
          title: Cent1
          default: 0
        variable_in_euro:
          type: number
          title: Variable In Euro
          default: 0
      type: object
      required:
        - name
      title: NewCashRegisterStocking
    NewProduct:
      properties:
        name:
          type: string
          title: Name
        price:
          anyOf:
            - type: number
            - type: 'null'
          title: Price
        fixed_price:
          type: boolean
          title: Fixed Price
          default: true
        price_in_vouchers:
          anyOf:
            - type: integer
            - type: 'null'
          title: Price In Vouchers
        price_per_voucher:
          anyOf:
            - type: number
            - type: 'null'
          title: Price Per Voucher
        tax_name:
          type: string
          title: Tax Name
        restrictions:
          items:
            $ref: '#/components/schemas/ProductRestriction'
          type: array
          title: Restrictions
          default: []
        is_locked:
          type: boolean
          title: Is Locked
          default: false
        is_returnable:
          type: boolean
          title: Is Returnable
          default: false
        target_account_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Target Account Id
      type: object
      required:
        - name
        - price
        - tax_name
      title: NewProduct
    NewTicket:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        product_id:
          type: integer
          title: Product Id
        initial_top_up_amount:
          type: number
          title: Initial Top Up Amount
        restriction:
          anyOf:
            - $ref: '#/components/schemas/ProductRestriction'
            - type: 'null'
      type: object
      required:
        - name
        - product_id
        - initial_top_up_amount
      title: NewTicket
    NewTill:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        active_shift:
          anyOf:
            - type: string
            - type: 'null'
          title: Active Shift
        active_profile_id:
          type: integer
          title: Active Profile Id
      type: object
      required:
        - name
        - active_profile_id
      title: NewTill
    NewTillButton:
      properties:
        name:
          type: string
          title: Name
        product_ids:
          items:
            type: integer
          type: array
          title: Product Ids
      type: object
      required:
        - name
        - product_ids
      title: NewTillButton
    NewTillLayout:
      properties:
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        button_ids:
          anyOf:
            - items:
                type: integer
              type: array
            - type: 'null'
          title: Button Ids
        ticket_ids:
          anyOf:
            - items:
                type: integer
              type: array
            - type: 'null'
          title: Ticket Ids
      type: object
      required:
        - name
        - description
      title: NewTillLayout
    NewTillProfile:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        layout_id:
          type: integer
          title: Layout Id
        allow_top_up:
          type: boolean
          title: Allow Top Up
        allow_cash_out:
          type: boolean
          title: Allow Cash Out
        allow_ticket_sale:
          type: boolean
          title: Allow Ticket Sale
        allowed_role_names:
          items:
            type: string
          type: array
          title: Allowed Role Names
      type: object
      required:
        - name
        - layout_id
        - allow_top_up
        - allow_cash_out
        - allow_ticket_sale
        - allowed_role_names
      title: NewTillProfile
    NewUserRole:
      properties:
        name:
          type: string
          title: Name
        is_privileged:
          type: boolean
          title: Is Privileged
          default: false
        privileges:
          items:
            $ref: '#/components/schemas/Privilege'
          type: array
          title: Privileges
      type: object
      required:
        - name
        - privileges
      title: NewUserRole
    NormalizedList_Account_int_:
      properties:
        ids:
          items:
            type: integer
          type: array
          title: Ids
        entities:
          additionalProperties:
            $ref: '#/components/schemas/Account'
          type: object
          title: Entities
      type: object
      required:
        - ids
        - entities
      title: NormalizedList[Account, int]
    NormalizedList_CashRegisterStocking_int_:
      properties:
        ids:
          items:
            type: integer
          type: array
          title: Ids
        entities:
          additionalProperties:
            $ref: '#/components/schemas/CashRegisterStocking'
          type: object
          title: Entities
      type: object
      required:
        - ids
        - entities
      title: NormalizedList[CashRegisterStocking, int]
    NormalizedList_CashRegister_int_:
      properties:
        ids:
          items:
            type: integer
          type: array
          title: Ids
        entities:
          additionalProperties:
            $ref: '#/components/schemas/CashRegister'
          type: object
          title: Entities
      type: object
      required:
        - ids
        - entities
      title: NormalizedList[CashRegister, int]
    NormalizedList_CashierShift_int_:
      properties:
        ids:
          items:
            type: integer
          type: array
          title: Ids
        entities:
          additionalProperties:
            $ref: '#/components/schemas/CashierShift'
          type: object
          title: Entities
      type: object
      required:
        - ids
        - entities
      title: NormalizedList[CashierShift, int]
    NormalizedList_Cashier_int_:
      properties:
        ids:
          items:
            type: integer
          type: array
          title: Ids
        entities:
          additionalProperties:
            $ref: '#/components/schemas/Cashier'
          type: object
          title: Entities
      type: object
      required:
        - ids
        - entities
      title: NormalizedList[Cashier, int]
    NormalizedList_ConfigEntry_str_:
      properties:
        ids:
          items:
            type: string
          type: array
          title: Ids
        entities:
          additionalProperties:
            $ref: '#/components/schemas/ConfigEntry'
          type: object
          title: Entities
      type: object
      required:
        - ids
        - entities
      title: NormalizedList[ConfigEntry, str]
    NormalizedList_Order_int_:
      properties:
        ids:
          items:
            type: integer
          type: array
          title: Ids
        entities:
          additionalProperties:
            $ref: '#/components/schemas/Order'
          type: object
          title: Entities
      type: object
      required:
        - ids
        - entities
      title: NormalizedList[Order, int]
    NormalizedList_Product_int_:
      properties:
        ids:
          items:
            type: integer
          type: array
          title: Ids
        entities:
          additionalProperties:
            $ref: '#/components/schemas/Product'
          type: object
          title: Entities
      type: object
      required:
        - ids
        - entities
      title: NormalizedList[Product, int]
    NormalizedList_TaxRate_str_:
      properties:
        ids:
          items:
            type: string
          type: array
          title: Ids
        entities:
          additionalProperties:
            $ref: '#/components/schemas/TaxRate'
          type: object
          title: Entities
      type: object
      required:
        - ids
        - entities
      title: NormalizedList[TaxRate, str]
    NormalizedList_Ticket_int_:
      properties:
        ids:
          items:
            type: integer
          type: array
          title: Ids
        entities:
          additionalProperties:
            $ref: '#/components/schemas/Ticket'
          type: object
          title: Entities
      type: object
      required:
        - ids
        - entities
      title: NormalizedList[Ticket, int]
    NormalizedList_TillButton_int_:
      properties:
        ids:
          items:
            type: integer
          type: array
          title: Ids
        entities:
          additionalProperties:
            $ref: '#/components/schemas/TillButton'
          type: object
          title: Entities
      type: object
      required:
        - ids
        - entities
      title: NormalizedList[TillButton, int]
    NormalizedList_TillLayout_int_:
      properties:
        ids:
          items:
            type: integer
          type: array
          title: Ids
        entities:
          additionalProperties:
            $ref: '#/components/schemas/TillLayout'
          type: object
          title: Entities
      type: object
      required:
        - ids
        - entities
      title: NormalizedList[TillLayout, int]
    NormalizedList_TillProfile_int_:
      properties:
        ids:
          items:
            type: integer
          type: array
          title: Ids
        entities:
          additionalProperties:
            $ref: '#/components/schemas/TillProfile'
          type: object
          title: Entities
      type: object
      required:
        - ids
        - entities
      title: NormalizedList[TillProfile, int]
    NormalizedList_Till_int_:
      properties:
        ids:
          items:
            type: integer
          type: array
          title: Ids
        entities:
          additionalProperties:
            $ref: '#/components/schemas/Till'
          type: object
          title: Entities
      type: object
      required:
        - ids
        - entities
      title: NormalizedList[Till, int]
    NormalizedList_UserRole_int_:
      properties:
        ids:
          items:
            type: integer
          type: array
          title: Ids
        entities:
          additionalProperties:
            $ref: '#/components/schemas/UserRole'
          type: object
          title: Entities
      type: object
      required:
        - ids
        - entities
      title: NormalizedList[UserRole, int]
    NormalizedList_User_int_:
      properties:
        ids:
          items:
            type: integer
          type: array
          title: Ids
        entities:
          additionalProperties:
            $ref: '#/components/schemas/User'
          type: object
          title: Entities
      type: object
      required:
        - ids
        - entities
      title: NormalizedList[User, int]
    Order:
      properties:
        id:
          type: integer
          title: Id
        uuid:
          type: string
          format: uuid
          title: Uuid
        total_price:
          type: number
          title: Total Price
        total_tax:
          type: number
          title: Total Tax
        total_no_tax:
          type: number
          title: Total No Tax
        cancels_order:
          anyOf:
            - type: integer
            - type: 'null'
          title: Cancels Order
        booked_at:
          type: string
          format: date-time
          title: Booked At
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        order_type:
          $ref: '#/components/schemas/OrderType'
        cashier_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Cashier Id
        till_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Till Id
        customer_account_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Customer Account Id
        customer_tag_uid:
          anyOf:
            - type: integer
            - type: 'null'
          title: Customer Tag Uid
        line_items:
          items:
            $ref: '#/components/schemas/LineItem'
          type: array
          title: Line Items
        customer_tag_uid_hex:
          type: string
          title: Customer Tag Uid Hex
      type: object
      required:
        - id
        - uuid
        - total_price
        - total_tax
        - total_no_tax
        - cancels_order
        - booked_at
        - payment_method
        - order_type
        - cashier_id
        - till_id
        - customer_account_id
        - customer_tag_uid
        - line_items
      title: Order
      description: |2-

            represents a completely finished order with all relevant data
            
    OrderType:
      type: string
      enum:
        - sale
        - cancel_sale
        - top_up
        - pay_out
        - ticket
        - money_transfer
        - money_transfer_imbalance
      title: OrderType
    PaymentMethod:
      type: string
      enum:
        - cash
        - sumup
        - tag
        - sumup_online
      title: PaymentMethod
    PendingLineItem:
      properties:
        quantity:
          type: integer
          title: Quantity
        product:
          $ref: '#/components/schemas/Product'
        product_price:
          type: number
          title: Product Price
        tax_name:
          type: string
          title: Tax Name
        tax_rate:
          type: number
          title: Tax Rate
        total_price:
          type: number
          title: Total Price
      type: object
      required:
        - quantity
        - product
        - product_price
        - tax_name
        - tax_rate
      title: PendingLineItem
    Privilege:
      type: string
      enum:
        - account_management
        - cashier_management
        - config_management
        - product_management
        - tax_rate_management
        - user_management
        - till_management
        - order_management
        - festival_overview
        - terminal_login
        - supervised_terminal_login
        - can_book_orders
        - grant_free_tickets
        - grant_vouchers
      title: Privilege
    Product:
      properties:
        name:
          type: string
          title: Name
        price:
          anyOf:
            - type: number
            - type: 'null'
          title: Price
        fixed_price:
          type: boolean
          title: Fixed Price
        price_in_vouchers:
          anyOf:
            - type: integer
            - type: 'null'
          title: Price In Vouchers
        price_per_voucher:
          anyOf:
            - type: number
            - type: 'null'
          title: Price Per Voucher
        tax_name:
          type: string
          title: Tax Name
        restrictions:
          items:
            $ref: '#/components/schemas/ProductRestriction'
          type: array
          title: Restrictions
        is_locked:
          type: boolean
          title: Is Locked
        is_returnable:
          type: boolean
          title: Is Returnable
        target_account_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Target Account Id
        id:
          type: integer
          title: Id
        tax_rate:
          type: number
          title: Tax Rate
      type: object
      required:
        - name
        - price
        - fixed_price
        - tax_name
        - restrictions
        - is_locked
        - is_returnable
        - id
        - tax_rate
      title: Product
    ProductRestriction:
      type: string
      enum:
        - under_16
        - under_18
      title: ProductRestriction
    ProductSoldStats:
      properties:
        name:
          type: string
          title: Name
        price:
          anyOf:
            - type: number
            - type: 'null'
          title: Price
        fixed_price:
          type: boolean
          title: Fixed Price
        price_in_vouchers:
          anyOf:
            - type: integer
            - type: 'null'
          title: Price In Vouchers
        price_per_voucher:
          anyOf:
            - type: number
            - type: 'null'
          title: Price Per Voucher
        tax_name:
          type: string
          title: Tax Name
        restrictions:
          items:
            $ref: '#/components/schemas/ProductRestriction'
          type: array
          title: Restrictions
        is_locked:
          type: boolean
          title: Is Locked
        is_returnable:
          type: boolean
          title: Is Returnable
        target_account_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Target Account Id
        id:
          type: integer
          title: Id
        tax_rate:
          type: number
          title: Tax Rate
        quantity_sold:
          type: integer
          title: Quantity Sold
      type: object
      required:
        - name
        - price
        - fixed_price
        - tax_name
        - restrictions
        - is_locked
        - is_returnable
        - id
        - tax_rate
        - quantity_sold
      title: ProductSoldStats
    TaxRate:
      properties:
        rate:
          type: number
          title: Rate
        description:
          type: string
          title: Description
        name:
          type: string
          title: Name
      type: object
      required:
        - rate
        - description
        - name
      title: TaxRate
    TaxRateWithoutName:
      properties:
        rate:
          type: number
          title: Rate
        description:
          type: string
          title: Description
      type: object
      required:
        - rate
        - description
      title: TaxRateWithoutName
    Ticket:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        product_id:
          type: integer
          title: Product Id
        initial_top_up_amount:
          type: number
          title: Initial Top Up Amount
        restriction:
          anyOf:
            - $ref: '#/components/schemas/ProductRestriction'
            - type: 'null'
        id:
          type: integer
          title: Id
        product_name:
          type: string
          title: Product Name
        price:
          type: number
          title: Price
        tax_name:
          type: string
          title: Tax Name
        tax_rate:
          type: number
          title: Tax Rate
        total_price:
          type: number
          title: Total Price
      type: object
      required:
        - name
        - product_id
        - initial_top_up_amount
        - id
        - product_name
        - price
        - tax_name
        - tax_rate
        - total_price
      title: Ticket
    Till:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        active_shift:
          anyOf:
            - type: string
            - type: 'null'
          title: Active Shift
        active_profile_id:
          type: integer
          title: Active Profile Id
        id:
          type: integer
          title: Id
        z_nr:
          type: integer
          title: Z Nr
        session_uuid:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Session Uuid
        registration_uuid:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Registration Uuid
        active_user_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Active User Id
        active_user_role_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Active User Role Id
        current_cash_register_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Current Cash Register Name
        current_cash_register_balance:
          anyOf:
            - type: number
            - type: 'null'
          title: Current Cash Register Balance
        tse_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Tse Id
        tse_serial:
          anyOf:
            - type: string
            - type: 'null'
          title: Tse Serial
      type: object
      required:
        - name
        - active_profile_id
        - id
        - z_nr
      title: Till
    TillButton:
      properties:
        name:
          type: string
          title: Name
        product_ids:
          items:
            type: integer
          type: array
          title: Product Ids
        id:
          type: integer
          title: Id
        price:
          type: number
          title: Price
      type: object
      required:
        - name
        - product_ids
        - id
        - price
      title: TillButton
    TillLayout:
      properties:
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        button_ids:
          anyOf:
            - items:
                type: integer
              type: array
            - type: 'null'
          title: Button Ids
        ticket_ids:
          anyOf:
            - items:
                type: integer
              type: array
            - type: 'null'
          title: Ticket Ids
        id:
          type: integer
          title: Id
      type: object
      required:
        - name
        - description
        - id
      title: TillLayout
    TillProfile:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        layout_id:
          type: integer
          title: Layout Id
        allow_top_up:
          type: boolean
          title: Allow Top Up
        allow_cash_out:
          type: boolean
          title: Allow Cash Out
        allow_ticket_sale:
          type: boolean
          title: Allow Ticket Sale
        allowed_role_names:
          items:
            type: string
          type: array
          title: Allowed Role Names
        id:
          type: integer
          title: Id
      type: object
      required:
        - name
        - layout_id
        - allow_top_up
        - allow_cash_out
        - allow_ticket_sale
        - allowed_role_names
        - id
      title: TillProfile
    TransferRegisterPayload:
      properties:
        source_cashier_id:
          type: integer
          title: Source Cashier Id
        target_cashier_id:
          type: integer
          title: Target Cashier Id
      type: object
      required:
        - source_cashier_id
        - target_cashier_id
      title: TransferRegisterPayload
    UpdateAccountCommentPayload:
      properties:
        comment:
          type: string
          title: Comment
      type: object
      required:
        - comment
      title: UpdateAccountCommentPayload
    UpdateBalancePayload:
      properties:
        new_balance:
          type: number
          title: New Balance
      type: object
      required:
        - new_balance
      title: UpdateBalancePayload
    UpdateCommentPayload:
      properties:
        comment:
          type: string
          title: Comment
      type: object
      required:
        - comment
      title: UpdateCommentPayload
    UpdateTagUidPayload:
      properties:
        new_tag_uid_hex:
          type: string
          title: New Tag Uid Hex
        comment:
          anyOf:
            - type: string
            - type: 'null'
          title: Comment
      type: object
      required:
        - new_tag_uid_hex
      title: UpdateTagUidPayload
    UpdateUserPayload:
      properties:
        login:
          type: string
          title: Login
        display_name:
          type: string
          title: Display Name
        role_names:
          items:
            type: string
          type: array
          title: Role Names
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        user_tag_uid_hex:
          anyOf:
            - type: string
            - type: 'null'
          title: User Tag Uid Hex
        transport_account_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Transport Account Id
        cashier_account_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Cashier Account Id
      type: object
      required:
        - login
        - display_name
        - role_names
      title: UpdateUserPayload
    UpdateUserRolePrivilegesPayload:
      properties:
        is_privileged:
          type: boolean
          title: Is Privileged
        privileges:
          items:
            $ref: '#/components/schemas/Privilege'
          type: array
          title: Privileges
      type: object
      required:
        - is_privileged
        - privileges
      title: UpdateUserRolePrivilegesPayload
    UpdateVoucherAmountPayload:
      properties:
        new_voucher_amount:
          type: integer
          title: New Voucher Amount
      type: object
      required:
        - new_voucher_amount
      title: UpdateVoucherAmountPayload
    User:
      properties:
        login:
          type: string
          title: Login
        display_name:
          type: string
          title: Display Name
        role_names:
          items:
            type: string
          type: array
          title: Role Names
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        user_tag_uid:
          anyOf:
            - type: integer
            - type: 'null'
          title: User Tag Uid
        transport_account_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Transport Account Id
        cashier_account_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Cashier Account Id
        id:
          type: integer
          title: Id
        user_tag_uid_hex:
          type: string
          title: User Tag Uid Hex
      type: object
      required:
        - login
        - display_name
        - role_names
        - id
      title: User
    UserRole:
      properties:
        name:
          type: string
          title: Name
        is_privileged:
          type: boolean
          title: Is Privileged
          default: false
        privileges:
          items:
            $ref: '#/components/schemas/Privilege'
          type: array
          title: Privileges
        id:
          type: integer
          title: Id
      type: object
      required:
        - name
        - privileges
        - id
      title: UserRole
    UserTagAccountAssociation:
      properties:
        account_id:
          type: integer
          title: Account Id
        mapping_was_valid_until:
          type: string
          format: date-time
          title: Mapping Was Valid Until
      type: object
      required:
        - account_id
        - mapping_was_valid_until
      title: UserTagAccountAssociation
    UserTagDetail:
      properties:
        user_tag_uid:
          type: integer
          title: User Tag Uid
        comment:
          anyOf:
            - type: string
            - type: 'null'
          title: Comment
        account_id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Account Id
        account_history:
          items:
            $ref: '#/components/schemas/UserTagAccountAssociation'
          type: array
          title: Account History
        user_tag_uid_hex:
          type: string
          title: User Tag Uid Hex
      type: object
      required:
        - user_tag_uid
        - account_history
      title: UserTagDetail
    UserTagHistoryEntry:
      properties:
        user_tag_uid:
          type: integer
          title: User Tag Uid
        account_id:
          type: integer
          title: Account Id
        comment:
          anyOf:
            - type: string
            - type: 'null'
          title: Comment
        mapping_was_valid_until:
          type: string
          format: date-time
          title: Mapping Was Valid Until
        user_tag_uid_hex:
          type: string
          title: User Tag Uid Hex
      type: object
      required:
        - user_tag_uid
        - account_id
        - mapping_was_valid_until
      title: UserTagHistoryEntry
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
    VoucherStats:
      properties:
        vouchers_issued:
          type: integer
          title: Vouchers Issued
          default: 0
        vouchers_spent:
          type: integer
          title: Vouchers Spent
          default: 0
      type: object
      title: VoucherStats
    stustapay__core__schema__cashier__CashierShiftStats__ProductStats:
      properties:
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer
          title: Quantity
      type: object
      required:
        - product
        - quantity
      title: ProductStats
    stustapay__core__service__order__stats__ProductStats:
      properties:
        product_quantities:
          items:
            $ref: '#/components/schemas/ProductSoldStats'
          type: array
          title: Product Quantities
        product_quantities_by_till:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ProductSoldStats'
            type: array
          type: object
          title: Product Quantities By Till
        voucher_stats:
          $ref: '#/components/schemas/VoucherStats'
      type: object
      required:
        - product_quantities
        - product_quantities_by_till
        - voucher_stats
      title: ProductStats
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: auth/login
