"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[803],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=s,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:s,o[1]=i;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5986:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(7462),s=(n(7294),n(3905));const a={},o="TSE server setup",i={unversionedId:"administrator-documentation/tse/tseserversetup",id:"administrator-documentation/tse/tseserversetup",title:"TSE server setup",description:"Host system setup",source:"@site/docs/administrator-documentation/tse/tseserversetup.md",sourceDirName:"administrator-documentation/tse",slug:"/administrator-documentation/tse/tseserversetup",permalink:"/docs/administrator-documentation/tse/tseserversetup",draft:!1,editUrl:"https://github.com/stustanet/stustapay/tree/master/website/docs/administrator-documentation/tse/tseserversetup.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"TSE",permalink:"/docs/administrator-documentation/tse/"},next:{title:"Developer Documentation",permalink:"/docs/developer-documentation/"}},l={},p=[{value:"Host system setup",id:"host-system-setup",level:2},{value:"Container setup",id:"container-setup",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,s.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"tse-server-setup"},"TSE server setup"),(0,s.kt)("h2",{id:"host-system-setup"},"Host system setup"),(0,s.kt)("p",null,"install debian stable on the server that hosts the TSE USB sticks"),(0,s.kt)("p",null,"create ",(0,s.kt)("inlineCode",{parentName:"p"},"tse")," user"),(0,s.kt)("p",null,"centos7 requires cgroupsv1:"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"/etc/default/grub"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'GRUB_CMDLINE_LINUX_DEFAULT="quiet systemd.unified_cgroup_hierarchy=false"\n')),(0,s.kt)("p",null,"as ",(0,s.kt)("inlineCode",{parentName:"p"},"root"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'apt install snapd\nsnap install core\nsnap install lxd --channel 5.0/stable\nsnap set lxd lvm.external=true\n/snap/bin/lxd init --preseed <<- EOF\nconfig: {}\nnetworks:\n- config:\n    ipv4.address: auto\n    ipv6.address: auto\n  description: ""\n  name: lxdbr0\n  type: ""\n  project: default\nstorage_pools:\n- config: {}\n  description: ""\n  name: default\n  driver: dir\nprofiles:\n- config: {}\n  description: ""\n  devices:\n    eth0:\n      name: eth0\n      network: lxdbr0\n      type: nic\n    root:\n      path: /\n      pool: default\n      type: disk\n  name: default\nprojects: []\ncluster: null\nEOF\ngpasswd -a tse lxd\n')),(0,s.kt)("h2",{id:"container-setup"},"Container setup"),(0,s.kt)("p",null,"perform once for each USB stick"),(0,s.kt)("p",null,"as user:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"lxc launch images:centos/7 tse1\n")),(0,s.kt)("p",null,"download tse webservice ",(0,s.kt)("a",{parentName:"p",href:"https://www.dieboldnixdorf.com/de-de/retail/campaigns/fiscalization/usb-stick/"},"RPM file")),(0,s.kt)("p",null,"Find path of first TSE in ",(0,s.kt)("inlineCode",{parentName:"p"},"/dev/serial/by-path/")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"lxc config device add tse1 ttyACM0 unix-char mode=0666 path=/dev/ttyACM0 source=/dev/serial/by-path/pci-0000:00:1d.0-usb-0:1.2:1.0\nlxc config device add tse1 dieboldjson proxy listen=tcp:0.0.0.0:10001 connect=tcp:127.0.0.1:10001\nlxc file push dn-tse-webservice-1.19.2-9.x86_64.rpm tse1/tmp/tse-webservice.rpm\nlxc exec tse1 yum install /tmp/tse-webservice.rpm\nlxc config set tse1 boot.autostart true\n")),(0,s.kt)("p",null,"In container ",(0,s.kt)("inlineCode",{parentName:"p"},"tse1"),": create ",(0,s.kt)("inlineCode",{parentName:"p"},"/etc/systemd/system/dntse.service")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-systemd"},"[Unit]\nDescription=Diebold Nixdorf TSE Websocket\nAfter=network.target\n\n[Service]\nExecStart=/opt/dn/tse/_run.sh\n\n[Install]\nWantedBy=multi-user.target\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"lxc exec systemctl enable --now dntse.service\n")),(0,s.kt)("p",null,"visit http://IP:10001/ for web interface"))}d.isMDXComponent=!0}}]);