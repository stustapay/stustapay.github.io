"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7662],{3023:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var r=n(3696);const a={},s=r.createContext(a);function o(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(s.Provider,{value:t},e.children)}},5529:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"developer-documentation/database","title":"Database","description":"To create a new database migration run","source":"@site/docs/developer-documentation/database.md","sourceDirName":"developer-documentation","slug":"/developer-documentation/database","permalink":"/docs/developer-documentation/database","draft":false,"unlisted":false,"editUrl":"https://github.com/stustapay/stustapay/tree/master/website/docs/developer-documentation/database.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docsSidebar","previous":{"title":"App","permalink":"/docs/developer-documentation/app"},"next":{"title":"Pretix Integration","permalink":"/docs/developer-documentation/pretix"}}');var a=n(2540),s=n(3023);const o={sidebar_position:3},i="Database",c={},d=[{value:"Reverting a Ticket Sale",id:"reverting-a-ticket-sale",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"database",children:"Database"})}),"\n",(0,a.jsx)(t.p,{children:"To create a new database migration run"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"sftkit create-migration <new-migration-name>\n"})}),"\n",(0,a.jsx)(t.h2,{id:"reverting-a-ticket-sale",children:"Reverting a Ticket Sale"}),"\n",(0,a.jsx)(t.p,{children:"For testing (ticket sales, order, ...),\nthis is how a sold ticket and all its orders can be deleted:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-sql",children:"with tags as (\n    select id from user_tag where pin='tag-pin'\n), accounts as (\n    select id from account where user_tag_id in (select * from tags)\n), orders as (\n    select id from ordr where customer_account_id in (select * from accounts)\n), deleted_customers as (\n    delete from customer_info where customer_account_id in (select * from accounts)\n), deleted_transactions as (\n    delete from transaction where order_id in (select * from orders)\n), deleted_line_items as (\n    delete from line_item where order_id in (select * from orders)\n), deleted_tse_sigs as (\n    delete from tse_signature where id in (select * from orders)\n), deleted_orders as (\n    delete from ordr where customer_account_id in (select * from accounts)\n)\ndelete from account where id in (select * from accounts);\n"})}),"\n",(0,a.jsxs)(t.p,{children:["To revert a ticket sale by ticket voucher, the account must remain.\nChange the last statement to instead clear the ",(0,a.jsx)(t.code,{children:"user_tag_id"}),":"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-sql",children:"update account set user_tag_id = null where id in (select * from accounts);\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);